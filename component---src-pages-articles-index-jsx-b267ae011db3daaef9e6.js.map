{"version":3,"sources":["webpack:///./src/pages/articles/index.jsx","webpack:///./src/components/components/Header.js"],"names":["ArticleItemContainer","styled","article","pageMeta","Articles","posts","data","allMarkdownRemark","edges","withFooter","bg","colors","pageTitle","pageDesription","title","className","role","map","node","id","excerpt","frontmatter","readtime","fields","bottom","key","to","path","brief","date","pageQuery","propTypes","PropTypes","oneOfType","object","isRequired","Wrapper","header","props","small","TextWrapper","div","Text","h1","Subtitle","p","Header","children","data-testid","string","bool","defaultProps"],"mappings":"6FAAA,gLAYMA,GAZN,UAY6BC,IAAOC,QAAV,wCAAGD,CAAH,uJAIpBE,EACG,qEADHA,EAEE,uCAGR,SAASC,EAAT,GAA6B,IACZC,EADW,EAARC,KACYC,kBAAtBC,MACR,OACE,kBAAC,IAAD,CACEC,YAAU,EACVC,GAAIC,SAAOD,GACXE,UAAWT,EACXU,eAAgBV,GAEhB,kBAAC,IAAD,CAAQW,MAAM,UACd,yBAAKC,UAAU,aACb,yBAAKC,KAAK,OAAOD,UAAU,uBACxBV,EAAMY,KACL,oBACEC,KACEC,EAFJ,EAEIA,GACAC,EAHJ,EAGIA,QACAC,EAJJ,EAIIA,YACUC,EALd,EAKIC,OAAUD,SALd,OAQE,kBAAC,IAAD,CAAME,QAAM,GACV,kBAACxB,EAAD,CAAsByB,IAAKN,EAAIH,KAAK,WAClC,yBAAKD,UAAU,WACb,kBAAC,IAAD,CAAMW,GAAIL,EAAYM,KAAMF,IAAKN,GAC/B,4BAAKE,EAAYP,QAEnB,2BAAIO,EAAYO,OAASR,GACzB,+BACGC,EAAYQ,KADf,KAGG,MAHH,KAKGP,YAahB,IAAMQ,EAAS,aAwBtB1B,EAAS2B,UAAY,CACnBzB,KAAM0B,IAAUC,UAAU,CAACD,IAAUE,SAASC,YAGjC/B,a,gFC/Ff,sEAOMgC,GAPN,UAOgBnC,IAAOoC,OAAV,wCAAGpC,CAAH,+IACGU,SAAOD,IACX,SAAA4B,GAAK,OAAKA,EAAMC,MAAQ,QAAU,YAWxCC,EAAcvC,IAAOwC,IAAV,wCAAGxC,CAAH,6MAeXyC,EAAOzC,IAAO0C,GAAV,wCAAG1C,CAAH,mEAOJ2C,EAAW3C,IAAO4C,EAAV,wCAAG5C,CAAH,yGASR6C,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUjC,EAAb,EAAaA,MAAOyB,EAApB,EAAoBA,MAApB,OACb,kBAACH,EAAD,CAASG,MAAOA,GACd,kBAACC,EAAD,KACG1B,GACC,kBAAC4B,EAAD,CAAM3B,UAAU,QAAQiC,cAAY,gBACjClC,GAGJiC,GAAY,kBAACH,EAAD,CAAU7B,UAAU,YAAYgC,MAKnDD,EAAOf,UAAY,CACjBgB,SAAUf,IAAUd,KACpBJ,MAAOkB,IAAUiB,OACjBV,MAAOP,IAAUkB,MAGnBJ,EAAOK,aAAe,CACpBJ,SAAU,KACVjC,MAAO,GACPyB,OAAO,GAGMO","file":"component---src-pages-articles-index-jsx-b267ae011db3daaef9e6.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link, graphql } from 'gatsby'\nimport styled from 'styled-components'\nimport tw from 'tailwind.macro'\nimport Fade from 'react-reveal/Fade'\nimport Layout from 'components/layouts'\nimport Header from 'components/components/Header'\n\nimport { colors } from '../../../tailwind'\nimport './index.scss'\n\nconst ArticleItemContainer = styled.article`\n  ${tw`flex flex-row sm:flex-col lg:flex-row`}\n`\n\nconst pageMeta = {\n  title: 'Blogs | Rishi Kumar Chawda - Web and Mobile Applications Developer',\n  desc: 'Blogs written by Rishi Kumar Chawda.',\n}\n\nfunction Articles({ data }) {\n  const { edges: posts } = data.allMarkdownRemark\n  return (\n    <Layout\n      withFooter\n      bg={colors.bg}\n      pageTitle={pageMeta.title}\n      pageDesription={pageMeta.desc}\n    >\n      <Header title=\"Blogs\" />\n      <div className=\"blog-main\">\n        <div role=\"main\" className=\"blog-main container\">\n          {posts.map(\n            ({\n              node: {\n                id,\n                excerpt,\n                frontmatter,\n                fields: { readtime },\n              },\n            }) => (\n              <Fade bottom>\n                <ArticleItemContainer key={id} role=\"article\">\n                  <div className=\"article\">\n                    <Link to={frontmatter.path} key={id}>\n                      <h1>{frontmatter.title}</h1>\n                    </Link>\n                    <p>{frontmatter.brief || excerpt}</p>\n                    <small>\n                      {frontmatter.date}\n                      &nbsp;&nbsp;\n                      {\" Â· \"}\n                      &nbsp;&nbsp;\n                      {readtime}\n                    </small>\n                  </div>\n                </ArticleItemContainer>\n              </Fade>\n            )\n          )}\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query articlesList {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 340)\n          frontmatter {\n            path\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            subtitle\n            brief\n            banner\n          }\n          fields {\n            readtime\n          }\n        }\n      }\n    }\n  }\n`\n\nArticles.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object]).isRequired,\n}\n\nexport default Articles\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nimport { colors } from '../../../tailwind'\nimport './header.scss'\n\nconst Wrapper = styled.header`\n  background: ${colors.bg};\n  height: ${props => (props.small ? '430px' : '560px')};\n  @media (max-width: 900px) {\n    height: 600px;\n  }\n  @media (max-width: 600px) {\n    height: 500px;\n  }\n  position: relative;\n  overflow: hidden;\n`\n\nconst TextWrapper = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  width: 100%;\n  max-width: 70rem;\n  padding: 0 2rem;\n  margin-bottom: 7rem;\n  align-items: center;\n`\n\nconst Text = styled.h1`\n  color: #fff;\n  font-size: 2rem;\n  line-height: 2.9rem;\n  font-weight: 400;\n`\n\nconst Subtitle = styled.p`\n  max-width: 650px;\n  color: #a8b8e1;\n  font-size: 1.33em;\n  line-height: 2rem;\n  margin-top: 1.51rem;\n  font-weight: 300;\n`\n\nconst Header = ({ children, title, small }) => (\n  <Wrapper small={small}>\n    <TextWrapper>\n      {title && (\n        <Text className=\"title\" data-testid=\"header-title\">\n          {title}\n        </Text>\n      )}\n      {children && <Subtitle className=\"subtitle\">{children}</Subtitle>}\n    </TextWrapper>\n  </Wrapper>\n)\n\nHeader.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string,\n  small: PropTypes.bool,\n}\n\nHeader.defaultProps = {\n  children: null,\n  title: '',\n  small: false,\n}\n\nexport default Header\n"],"sourceRoot":""}