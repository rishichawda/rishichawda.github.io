{"version":3,"sources":["webpack:///./src/components/components/Header.js","webpack:///./src/content/reads/quotes.js","webpack:///./src/pages/reads/index.jsx"],"names":["Wrapper","styled","header","colors","bg","props","small","TextWrapper","div","Text","h1","Subtitle","p","Header","children","title","className","data-testid","propTypes","PropTypes","node","string","bool","defaultProps","quote","info","pageMeta","Reads","withFooter","pageTitle","quotes","map","index","key"],"mappings":"0IAAA,sEAOMA,GAPN,UAOgBC,IAAOC,OAAV,wCAAGD,CAAH,+IACGE,SAAOC,IACX,SAAAC,GAAK,OAAKA,EAAMC,MAAQ,QAAU,YAWxCC,EAAcN,IAAOO,IAAV,wCAAGP,CAAH,6MAeXQ,EAAOR,IAAOS,GAAV,wCAAGT,CAAH,mEAOJU,EAAWV,IAAOW,EAAV,wCAAGX,CAAH,yGASRY,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,MAAOT,EAApB,EAAoBA,MAApB,OACb,kBAACN,EAAD,CAASM,MAAOA,GACd,kBAACC,EAAD,KACGQ,GACC,kBAACN,EAAD,CAAMO,UAAU,QAAQC,cAAY,gBACjCF,GAGJD,GAAY,kBAACH,EAAD,CAAUK,UAAU,YAAYF,MAKnDD,EAAOK,UAAY,CACjBJ,SAAUK,IAAUC,KACpBL,MAAOI,IAAUE,OACjBf,MAAOa,IAAUG,MAGnBT,EAAOU,aAAe,CACpBT,SAAU,KACVC,MAAO,GACPT,OAAO,GAGMO,O,0GC5EA,GACb,CACEW,MAAO,oFAET,CACEA,MACE,qGACFC,KAAM,6CAER,CACED,MAAO,2DACPC,KAAM,eAER,CACED,MACE,gJACFC,KAAM,2DAER,CACED,MAAO,kFAET,CACEA,MAAO,2EACPC,KAAM,+BAER,CACED,MACE,sIACFC,KAAM,gCAER,CACED,MACE,4FACFC,KAAM,+BAER,CACED,MAAO,2CACPC,KAAM,uBAER,CACED,MACE,0HACFC,KAAM,oBAER,CACED,MACE,qHACFC,KAAM,kBAER,CACED,MACE,sPACFC,KAAM,+BAER,CACED,MAAO,uDACPC,KAAM,iBAER,CACED,MACE,gHACFC,KAAM,iBAER,CACED,MACE,0GACFC,KAAM,cAER,CACED,MACE,uGAEJ,CACEA,MACE,yNACFC,KAAM,oB,oCClEJC,G,UACG,sEAGM,SAASC,IACtB,OACE,kBAAC,IAAD,CAAQC,YAAU,EAACxB,GAAID,SAAOC,GAAIyB,UAAWH,GAC3C,kBAACb,EAAA,EAAD,CAAQE,MAAM,UAAd,yFAGA,yBAAKC,UAAU,eACb,yBAAKA,UAAU,yBACb,4BACGc,EAAOC,KAAI,SAACP,EAAOQ,GAAR,OACV,wBAAIC,IAAG,UAAKT,EAAMC,MAAX,OAAkBO,EAAQ,GAAKhB,UAAU,SAC9C,+CAAiBQ,EAAMA,MAAvB,MACA,2BAAIA,EAAMC,MAAQ","file":"component---src-pages-reads-index-jsx-9aeb89926c8f86b2d6cd.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nimport { colors } from '../../../tailwind'\nimport './header.scss'\n\nconst Wrapper = styled.header`\n  background: ${colors.bg};\n  height: ${props => (props.small ? '430px' : '560px')};\n  @media (max-width: 900px) {\n    height: 600px;\n  }\n  @media (max-width: 600px) {\n    height: 500px;\n  }\n  position: relative;\n  overflow: hidden;\n`\n\nconst TextWrapper = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  width: 100%;\n  max-width: 70rem;\n  padding: 0 2rem;\n  margin-bottom: 7rem;\n  align-items: center;\n`\n\nconst Text = styled.h1`\n  color: #fff;\n  font-size: 2rem;\n  line-height: 2.9rem;\n  font-weight: 400;\n`\n\nconst Subtitle = styled.p`\n  max-width: 650px;\n  color: #a8b8e1;\n  font-size: 1.33em;\n  line-height: 2rem;\n  margin-top: 1.51rem;\n  font-weight: 300;\n`\n\nconst Header = ({ children, title, small }) => (\n  <Wrapper small={small}>\n    <TextWrapper>\n      {title && (\n        <Text className=\"title\" data-testid=\"header-title\">\n          {title}\n        </Text>\n      )}\n      {children && <Subtitle className=\"subtitle\">{children}</Subtitle>}\n    </TextWrapper>\n  </Wrapper>\n)\n\nHeader.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string,\n  small: PropTypes.bool,\n}\n\nHeader.defaultProps = {\n  children: null,\n  title: '',\n  small: false,\n}\n\nexport default Header\n","export default [\n  {\n    quote: 'The joy of discovery is one of the best things about being a software developer.',\n  },\n  {\n    quote:\n      'Of all the hardships a person had to face, none was more punishing than the simple act of waiting.',\n    info: 'Khaled Hosseini, A Thousand Splendid Suns',\n  },\n  {\n    quote: 'Experience is the name everyone gives to their mistakes.',\n    info: 'Oscar Wilde',\n  },\n  {\n    quote:\n      'The programmer has to be able to think in terms of conceptual hierarchies that are much deeper than a single mind ever needed to face before.',\n    info: 'Dutch computer scientist Edsger Dijkstra wrote in 1988.',\n  },\n  {\n    quote: 'Things that are impossible just take longer than the things that are possible.',\n  },\n  {\n    quote: 'Remember that wherever your heart is, there you will find your treasure.',\n    info: 'Paulo Coelho, The Alchemist',\n  },\n  {\n    quote:\n      'We are each of us like our little blue planet, hung in black space, upheld by nothing but our mutual reassurances, our loving lies.',\n    info: 'John Updike, Rabbit at Rest ',\n  },\n  {\n    quote:\n      'The simple things are also the most extraordinary things, and only the wise can see them.',\n    info: 'Paulo Coelho, The Alchemist',\n  },\n  {\n    quote: 'Love all, trust a few, do wrong to none.',\n    info: 'William Shakespeare',\n  },\n  {\n    quote:\n      'Every great developer you know got there by solving problems they were unqualified to solve until they actually did it.',\n    info: 'Patrick McKenzie',\n  },\n  {\n    quote:\n      'Always code as if the guy who ends up maintaining your code will be a violent psychopath who knows where you live.',\n    info: 'Martin Golding',\n  },\n  {\n    quote:\n      'Heroes who make enormous sacrifices for others are “inspiring,” but when it comes to motivating real-world behavior, research shows that the best way to get people to do something good is to tell them that their neighbors are already doing it.',\n    info: 'Joshua Greene, Moral Tribes',\n  },\n  {\n    quote: \"Never trust a computer you can't throw out a window.\",\n    info: 'Steve Wozniak',\n  },\n  {\n    quote:\n      'A primary cause of complexity is that software vendors uncritically adopt almost any feature that users want.',\n    info: 'Niklaus Wirth',\n  },\n  {\n    quote:\n      'Measuring programming progress by lines of code is like measuring aircraft building progress by weight.',\n    info: 'Bill Gates',\n  },\n  {\n    quote:\n      'The main point is that the only person who knows what a successful life looks like for you, is you.',\n  },\n  {\n    quote:\n      'The happiness of those who want to be popular depends on others; the happiness of those who seek pleasure fluctuates with moods outside their control; but the happiness of the wise grows out of their own free acts.',\n    info: 'Marcus Aurelius',\n  },\n]\n","import React from 'react'\n\nimport quotes from 'content/reads/quotes'\nimport Layout from 'components/layouts'\nimport Header from 'elements/Header'\n\nimport { colors } from '../../../tailwind'\nimport './index.scss'\n\nconst pageMeta = {\n  title: 'Reads | Rishi Kumar Chawda - Web and Mobile Applications Developer',\n}\n\nexport default function Reads() {\n  return (\n    <Layout withFooter bg={colors.bg} pageTitle={pageMeta.title}>\n      <Header title=\"Quotes\">\n        Some of my favourite quotes from various sources like books, articles and tweets too!\n      </Header>\n      <div className=\"quotes-main\">\n        <div className=\"quotes-main container\">\n          <ul>\n            {quotes.map((quote, index) => (\n              <li key={`${quote.info}${index + 1}`} className=\"quote\">\n                <blockquote>{`“${quote.quote}”`}</blockquote>\n                <p>{quote.info || ''}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n"],"sourceRoot":""}